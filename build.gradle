buildscript {
    repositories {
        maven { url = "https://maven.explodingcreeper.me/" }
    }
    dependencies {
        classpath "me.hypherionmc:CurseGradle:2.0.4"
    }
}

plugins {
    id "fabric-loom" version "0.10-SNAPSHOT"
    id "maven-publish"
    id "com.modrinth.minotaur" version "1.2.1"
}
apply(plugin: "me.hypherionmc.cursegradle")

repositories {
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    // maven { url = "https://maven.nucleoid.xyz/" }
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = "${project.mod_version}+${project.minecraft_version}"
group = project.maven_group

dependencies {
    minecraft("com.mojang:minecraft:${project.minecraft_version}")
    mappings("net.fabricmc:yarn:${project.minecraft_version}+build.${project.yarn_build}:v2")
    modImplementation("net.fabricmc:fabric-loader:${project.loader_version}")

    Set<String> apiModules = [
            "fabric-api-base",
            "fabric-command-api-v1",
            "fabric-lifecycle-events-v1",
            "fabric-events-interaction-v0"
    ]

    // Add each module as a dependency
    apiModules.forEach {
        include(modImplementation(fabricApi.module(it, project.fabric_version)))
    }


    // Permissions API
    modImplementation("me.lucko:fabric-permissions-api:${project.permissions_api_version}")
    modApi("me.lucko:fabric-permissions-api:${project.permissions_api_version}")
    include("me.lucko:fabric-permissions-api:${project.permissions_api_version}")

    // Seems to break in unexpected ways
    // modImplementation include("fr.catcore:server-translations-api:1.4.8+1.17")

    compileOnly("org.jetbrains:annotations:21.0.1")
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand("version": project.version)
    }
}

tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"

    // Minecraft 1.18 (21w19a) upwards uses Java 17.
    it.options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy(remapJar)
            }
            artifact(sourcesJar) {
                builtBy(remapSourcesJar)
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}

import com.modrinth.minotaur.TaskModrinthUpload

task publishModrinth (type: TaskModrinthUpload) {
    onlyIf {
        System.getenv("MODRINTH") // Only attempt to run this task if the MODRINTH variable is set, otherwise SKIP it
    }

    token = System.getenv("MODRINTH") // Use an environment property if releasing your source code on GitHub!
    projectId = "116VbfxT" // The ID of your modrinth project, slugs will not work.
    versionName = "${archivesBaseName}-${version}" // The version of the mod to upload.
    versionNumber = "${project.mod_version}+${project.minecraft_version}" // The version of the mod to upload.
    changelog = System.getenv("CHANGELOG")
    versionType = "BETA"
    uploadFile = remapJar // This links to a task that builds your mod jar and sets "uploadFile" to the mod jar.
    addGameVersion(project.minecraft_version) // Any minecraft version.
    addLoader("fabric")
}

curseforge {
    project {
        id = "514837"
        apiKey = System.getenv("CURSEFORGE")
        changelog = System.getenv("CHANGELOG") != null ? System.getenv("CHANGELOG") : ""
        changelogType = "markdown"
        releaseType = "beta"
        addGameVersion("Fabric")
        addGameVersion(project.minecraft_version)
        relations {
            requiredDependency "fabric-api" // Fabric API is required
            tool "luckperms" // Luckperms is a compatible tool
        }

        mainArtifact(remapJar) {
            displayName = "${archivesBaseName}-${version}+${project.minecraft_version}"
        }
    }
}

tasks.withType(AbstractArchiveTask).configureEach {
    preserveFileTimestamps = false
    reproducibleFileOrder = true
}